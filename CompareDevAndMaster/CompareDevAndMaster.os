#Использовать ReadParams
#Использовать v8runner
#Использовать Tlog
#Использовать TMail

Перем Конфигуратор;
Перем Параметры;
Перем Логирование;

Процедура ПрочитатьПараметрыИзФайла()

	УстановитьТекущийКаталог("C:\scripts\CompareDevAndMaster");
	Параметры = ЧтениеПараметров.Прочитать(ОбъединитьПути(ТекущийКаталог(), "CompareDevAndMaster.json"));

КонецПроцедуры

Процедура ИнициализироватьЛог()
	
	Логирование = Новый ТУправлениеЛогированием();
	Логирование.ДатаВремяВКаждойСтроке = Истина;
	Логирование.ВыводитьСообщенияПриЗаписи = Истина; 
	Логирование.СоздатьФайлЛога(Параметры["ИмяЛога"], Параметры["КаталогЛога"]);
	Логирование.ЗаписатьСтрокуЛога("Начато сравнение хранилища разработчиков с хранилищем рабочей базы");
	Логирование.УвеличитьУровень();

КонецПроцедуры

Процедура УстановитьКонтекстКонфигурации()

	Конфигуратор = Новый УправлениеКонфигуратором();
	Конфигуратор.УстановитьКонтекст("/S" + Параметры["ИмяСервера"] + "\" + Параметры["ИмяБазы"], Параметры["ПользовательИБ"], Параметры["ПарольИБ"]);
	Логирование.ЗаписатьСтрокуЛога("Информационная база подключена");

КонецПроцедуры

Процедура ОтправитьИзмененияКонфигурации()
	
	УправлениеЭП = Новый ТУправлениеЭлектроннойПочтой();

	УчетнаяЗаписьЭП = УправлениеЭП.УчетнаяЗаписьЭП;
	УчетнаяЗаписьЭП.АдресSMTP 			= Параметры["АдресSMTP"];
	УчетнаяЗаписьЭП.ПользовательSMTP 	= Параметры["ПользовательSMTP"];
	УчетнаяЗаписьЭП.ПарольSMTP 			= Параметры["ПарольSMTP"];
	УчетнаяЗаписьЭП.ПортSMTP 			= Параметры["ПортSMTP"];
	
	СтруктураСообщения = УправлениеЭП.СтруктураСообщения;
	СтруктураСообщения.АдресЭлектроннойПочтыПолучателя = Параметры["АдресПолучателя"];
	
	ИмяВременногоФайла = КаталогВременныхФайлов() + "ОтчетОСравнении.txt";
	СравнитьКонфигурациюРазработкиСХранилищемРабочей(ИмяВременногоФайла);
	
	СтруктураСообщения = УправлениеЭП.СтруктураСообщения;
	СтруктураСообщения.АдресЭлектроннойПочтыОтправителя = УправлениеЭП.УчетнаяЗаписьЭП.ПользовательSMTP;
	СтруктураСообщения.ТемаСообщения = Параметры["ТемаСообщения"];
	СтруктураСообщения.ТипТекстаПочтовогоСообщения = "Строка";
	СтруктураСообщения.Вставить("ТекстСообщения", ТекстСравнения(ИмяВременногоФайла));
	
	Если УправлениеЭП.ОтправитьСообщение() Тогда
		
		Логирование.ЗаписатьСтрокуЛога("Отчет о сравнении конфигураций отправлен");

	Иначе
		
		Логирование.ЗаписатьСтрокуЛога(УправлениеЭП.ТекстОшибки);

	КонецЕсли;

	УдалитьФайлы(ИмяВременногоФайла);

КонецПроцедуры

Процедура СравнитьКонфигурациюРазработкиСХранилищемРабочей(ИмяФайла)

	Конфигуратор.ПолучитьОтчетОСравненииКонфигурацииСХранилищем(Параметры["ПутьКХранилищу"], Параметры["ПользовательХранилища"], Параметры["ПарольХранилища"], "-1", ИмяФайла)
	
КонецПроцедуры

Функция ТекстСравнения(ИмяФайла)

	ТекстовыйФайл = Новый ЧтениеТекста(ИмяФайла);
	Сообщение = ТекстовыйФайл.Прочитать();
	ТекстовыйФайл.Закрыть();
	
	Возврат Сообщение
	
КонецФункции

Процедура ЗавершитьПодготовку()

	Логирование.УменьшитьУровень();
	Логирование.ЗаписатьСтрокуЛога("Окончание подготовки обновления");	

КонецПроцедуры

Процедура ОбработатьИсключение(ТекстОшибки)

	Логирование.ЗаписатьСтрокуЛога(ТекстОшибки);
	Логирование.УменьшитьУровень();
	Логирование.ЗаписатьСтрокуЛога("Во время подготовки произошла ошибка!");	

КонецПроцедуры

Попытка

	ПрочитатьПараметрыИзФайла();
	ИнициализироватьЛог();
	УстановитьКонтекстКонфигурации();
	ОтправитьИзмененияКонфигурации();

	ЗавершитьПодготовку();

Исключение

	ОбработатьИсключение(ОписаниеОшибки());

КонецПопытки;